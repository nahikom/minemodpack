{
	"credit": "Created by FreshLX for Fresh Animations",
	"textureSize": [128, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 0, 0]
				}
			],
			"animations": [
				{
					"var.testing": "0",
					"var.count_swim": " clamp(if(!is_riding&&!is_on_ground&&is_in_water, min(40, var.count_swim  +0.1 *frame_time*40), max(0, var.count_swim  -0.1 *frame_time*40)), 0, 1)",
					"var.r": "(pi*random(id)*2) + (limb_swing/20)*0",
					"var.b": "age /(11 -random(id)*2)",
					"var.ls": "limb_swing/if( limb_speed>0.5, 1.6, 1.1 )",
					"var.swim": "limb_swing/2 +age/4",
					"var.walk": "clamp(limb_speed*6, 0, 1)*clamp(2-limb_speed*3, 0, 1)",
					"var.ylook": "clamp(sin(var.r+age/60)*6, 0, 1)*1.2",
					"var.crossbow": "if(equals(left_arm.ry -torad(40), right_arm.ry +torad(40), torad(30)), 1, 0)",
					"var.pose": "if(is_riding||is_in_water&&!is_on_ground, 0, clamp(1-limb_speed*4, 0, 1))*clamp(random(id)+0.3, 0.3, 1)",
					"var.nov1": "if(var.crossbow==1, 0, clamp(-5.6 +cos(-pi/6 +var.r +age/80)*6, 0, 1)*clamp(2-limb_speed*4, 0, 1) )",
					"var.nov2": "clamp(-39 +cos(-pi/4 +var.r +var.b/20)*40, 0, 1)*clamp(1-limb_speed*2, 0, 1)",
					"var.nov3": " if(var.crossbow==1, clamp(-2 +cos(-pi/4 +var.r +var.b/10)*6, 0, 1)*clamp(2-limb_speed*3, 0, 1), 0)"
				},
				{
					"head.rx": "torad(head_pitch)/1.5 +sin(var.ls*2)/20*limb_speed +if(!is_riding&&!is_on_ground&&is_in_water, cos(var.swim*2)/30 +torad(-10) +torad(10*clamp(limb_speed*8, 0, 1)), 0) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b))/4 -torad(10) )*var.nov2 +(sin(limb_swing/2)/4 +torad(20))*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.ry": "torad(head_yaw)/(1.8 -0.5*var.ylook)  +sin(var.r+age/10 +sin(var.r*2+age/5)/2)/6 *var.nov1 +torad(10)*-cos(var.nov3*pi)*var.nov3",
					"head.rz": "-torad(20)*-cos(var.nov3*pi)*var.nov3 +sin(var.r+age/10 +sin(var.r*2+age/5)/2)/20*var.nov1 +cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"head.tx": "sin(torad(45)+var.ls)/3*limb_speed",
					"head.ty": "if(!is_riding&&!is_on_ground&&is_in_water, -sin(var.swim*2)/2          , 0.3) +14*var.count_swim +limb_speed*var.walk -sin(torad(if(limb_speed>0.5, -45, 45))+var.ls*2)*limb_speed +sin(var.r +var.b)/6 +( cos(var.r+var.b +sin(var.r+var.b)*1.5)/2 +0.5 )*var.nov2 +0.5*-cos(var.nov3*pi)*var.nov3",
					"head.tz": "if(!is_riding&&!is_on_ground&&is_in_water, -1*clamp(limb_speed*8, 0, 1), (-2.5*limb_speed) -sin(var.r +var.b)/6 -cos(var.ls*2)/2*clamp(limb_speed*3, 0, 1) ) +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"nose.ty": "head.ty*var.testing",
					"body.rx": "         if(!is_riding&&!is_on_ground&&is_in_water, torad(20          *clamp(limb_speed*8, 0, 1)), sin(var.r +var.b)/60 +cos(var.ls*2)/18*limb_speed +torad(-2.5)*clamp(1-limb_speed*2, 0, 1) +torad(15)*limb_speed ) +( cos(var.r+var.b +sin(var.r+var.b))/12 )*var.nov2 -(sin(limb_swing/2)/2 +torad(20))/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"body.ry": "         if(!is_riding&&!is_on_ground&&is_in_water, sin(var.swim  )/8                            , torad(-7.5*(1+var.crossbow))*var.pose -sin(var.ls)/4*limb_speed*clamp(-1+limb_speed*2, 0, 1) ) +torad(head_yaw)/6*clamp(1-limb_speed*2, 0, 1)",
					"body.rz": "head.rz +if(!is_riding&&!is_on_ground&&is_in_water, sin(var.swim  )/30*clamp(limb_speed*8, 0, 1) , 0) -sin(var.r+age/10 +sin(var.r*2+age/5)/2)/20*var.nov1 -cos(limb_swing/3)/3*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0) +torad(20)*-cos(var.nov3*pi)*var.nov3",
					"body.tx": "head.tx",
					"body.ty": "head.ty -cos(torad(if(limb_speed>0.5, -45, 45))+var.ls*2 +cos(var.ls*2)/2)/1.5*limb_speed -0.5*-cos(var.nov3*pi)*var.nov3",
					"body.tz": "head.tz +(0.25*limb_speed)",
					"nose.rx": "head.rx*var.testing",
					"nose.ry": "head.ry*var.testing",
					"nose.rz": "head.rz*var.testing",
					"nose.tx": "head.tx*var.testing",
					"nose.tz": "head.tz*var.testing"
				},
				{
					"right_arm.rx": "if(var.crossbow==1, right_arm.rx*(1-var.testing) -torad(90)*var.testing -sin(var.r +var.b)/40 +sin(var.ls*2)/10*limb_speed                                                                                  +torad(-7 +(-head_pitch +50)*clamp(limb_speed*1.5, 0, 1)*(1-var.nov3)) -torad(2)*-cos(var.nov3*pi)*var.nov3, if(!is_riding&&!is_on_ground&&is_in_water,      torad(-50) -cos(var.swim                 )/4*clamp(1-limb_speed*8, 0, 1) +(cos(var.swim +sin(var.swim)) +torad(30)                                            )*clamp(limb_speed*8, 0, 1), if(is_riding, torad(-45), -sin(var.ls)*limb_speed ) +torad(head_yaw)/8 )   +torad(-10)*var.pose +( -sin(-pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2  ) +(sin(limb_swing/2) -pi/4)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)*if(var.crossbow==1, -0.7, 1)",
					"left_arm.rx": " if(var.crossbow==1,  left_arm.rx*(1-var.testing) -torad(90)*var.testing -sin(var.r +var.b)/40 +sin(var.ls*2)/10*limb_speed +clamp(-torad(head_pitch)/4, 0, pi/2)*clamp(1-limb_speed*1.5, 0, 1)*(1-var.nov3) +torad(    (-head_pitch +35)*clamp(limb_speed*1.5, 0, 1)*(1-var.nov3)) -torad(5)*-cos(var.nov3*pi)*var.nov3, if(!is_riding&&!is_on_ground&&is_in_water,      torad(-50) -cos(var.swim                 )/4*clamp(1-limb_speed*8, 0, 1) +(cos(var.swim +sin(var.swim)) +torad(30)                                            )*clamp(limb_speed*8, 0, 1), if(is_riding, torad(-45),  sin(var.ls)*limb_speed ) -torad(head_yaw)/8 )   +torad( 5 )*var.pose +( -sin(-pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2  ) +(sin(limb_swing/2) -pi/4)/2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)*if(var.crossbow==1, -0.7, 1)",
					"right_arm.ry": "if(var.crossbow==1, right_arm.ry*(1-var.testing) -torad(15)*var.testing -sin(var.ls)/3*limb_speed*(1-var.nov3) -torad(25*clamp(-1+limb_speed*3, 0, 1)*(1-var.nov3))                                                                                +torad(-head_yaw*clamp(limb_speed*1.5, 0, 1)) +clamp(torad(head_pitch)/8,-pi/4, 0), if(!is_riding&&!is_on_ground&&is_in_water,      torad( 30) -sin(var.swim +cos(var.swim)/4)  *clamp(1-limb_speed*8, 0, 1) +(torad( 5) +cos(pi/8 +var.swim +sin(var.swim)/2 )/2 +clamp(-sin(var.swim),-pi/2, 0) )*clamp(limb_speed*8, 0, 1), if(is_riding, -torad(20), 0) -torad(15)*clamp(limb_speed*4, 0, 1) +cos(var.r +var.b)/30 ) +torad(-35)*var.pose  )",
					"left_arm.ry": " if(var.crossbow==1,  left_arm.ry*(1-var.testing) +torad(40)*var.testing -sin(var.ls)/3*limb_speed*(1-var.nov3) -torad(10*clamp(-1+limb_speed*3, 0, 1)*(1-var.nov3)) +clamp(-torad(head_yaw)/3,-pi/2, 0)*clamp(1-limb_speed*1.5, 0, 1)*(1-var.nov3) +torad(-head_yaw*clamp(limb_speed*1.5, 0, 1)) +clamp(torad(head_pitch)/8,-pi/4, 0), if(!is_riding&&!is_on_ground&&is_in_water,      torad(-30) +sin(var.swim +cos(var.swim)/4)  *clamp(1-limb_speed*8, 0, 1) +(torad(-5) -cos(pi/8 +var.swim +sin(var.swim)/2 )/2 +clamp( sin(var.swim), 0, pi/2) )*clamp(limb_speed*8, 0, 1), if(is_riding,  torad(20), 0) +torad(15)*clamp(limb_speed*4, 0, 1) -cos(var.r +var.b)/30 ) +torad( 20)*var.pose  )",
					"right_arm.rz": "if(var.crossbow==1, right_arm.rz*(1-var.testing) -clamp(torad(head_pitch)/8,-pi/4, pi/4) +torad(5)*-cos(var.nov3*pi)*var.nov3, if(!is_riding&&!is_on_ground&&is_in_water, -cos(var.swim)/2 +(torad( 20) +cos(var.swim)/2)  *clamp(  limb_speed*8, 0, 1)                                          , 0 ) -torad(head_pitch)/14 +torad( 8 +2  *var.pose)  )",
					"left_arm.rz": " if(var.crossbow==1,  left_arm.rz*(1-var.testing) +clamp(torad(head_pitch)/8,-pi/4, pi/4)                                     , if(!is_riding&&!is_on_ground&&is_in_water,  cos(var.swim)/2 +(torad(-20) -cos(var.swim)/2)  *clamp(  limb_speed*8, 0, 1)                                          , 0 ) +torad(head_pitch)/14 +torad(-8 +0.5*var.pose)  )",
					"right_arm.tx": "body.tx -5 -0.2*var.pose +if(var.crossbow==1, sin(-pi/3+var.ls)*limb_speed +1   +clamp(-head_yaw/20,  0, 3.5), if(!is_riding&&!is_on_ground&&is_in_water,  (0.5 -cos(-pi/8 +var.swim -sin(var.swim)/2 ) -clamp( sin(var.swim), 0, 1.5)              )*clamp(limb_speed*8, 0, 1), (-sin(var.ls)/2*limb_speed )*torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) -0.3 )  )",
					"left_arm.tx": " body.tx +5 +0.2*var.pose +if(var.crossbow==1, sin(-pi/3+var.ls)*limb_speed -0.8 +clamp(-head_yaw/20, -3, 0  ), if(!is_riding&&!is_on_ground&&is_in_water, -(0.5 -cos(-pi/8 +var.swim -sin(var.swim)/2 ) -clamp( sin(var.swim), 0, 1.5)              )*clamp(limb_speed*8, 0, 1), ( sin(var.ls)/2*limb_speed )*torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) +0.3 )  )",
					"right_arm.ty": "body.ty +2 +if(var.crossbow==1, 0.5*clamp(limb_speed*1.5, 0, 1)  *(1-var.nov3) +cos(var.ls*2)/3*limb_speed -0.3*-cos(var.nov3*pi)*var.nov3, 0) +if(!is_riding&&!is_on_ground&&is_in_water, (1 -cos(var.swim)/2)*clamp(  limb_speed*8, 0, 1)                                                                     , sin(var.r +var.b-torad(60))/7                                                                              +if(is_riding, 1, 0) +(0.5)*var.pose ) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b)*1.5) )*var.nov2",
					"left_arm.ty": " body.ty +2 +if(var.crossbow==1, 0.5*clamp(limb_speed*1.5, 0, 1)  *(1-var.nov3) +cos(var.ls*2)/3*limb_speed                                , 0) +if(!is_riding&&!is_on_ground&&is_in_water, (1 -cos(var.swim)/2)*clamp(  limb_speed*8, 0, 1)                                                                     , sin(var.r +var.b-torad(60))/7                                                                              +if(is_riding, 1, 0) +(0.5)*var.pose ) +( cos(-pi/3 +var.r+var.b +sin(var.r+var.b)*1.5) )*var.nov2",
					"right_arm.tz": "            if(var.crossbow==1, -2 +clamp(limb_speed*1.5, 0, 1)  *(1-var.nov3) +clamp( head_yaw/30, -2, 2) -sin(torad(-30)+var.ls)*limb_speed, if(!is_riding&&!is_on_ground&&is_in_water, -1 -cos(var.swim)*2 *clamp(1-limb_speed*8, 0, 1) +head.tz +(-1 +cos(-pi/8 +var.swim)*2 )*clamp(limb_speed*8, 0, 1), (-2*limb_speed) -sin(torad(-30)+var.ls)*3*limb_speed -sin(var.r +var.b)/6 +torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) +if(is_riding, -2, 0) ) ) +(-0.75*(1+var.crossbow))*var.pose +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_arm.tz": "             if(var.crossbow==1, -2 -clamp(limb_speed*1.5, 0, 1)*2*(1-var.nov3) +clamp(-head_yaw/30, -3, 4) +sin(torad(-30)+var.ls)*limb_speed, if(!is_riding&&!is_on_ground&&is_in_water, -1 -cos(var.swim)*2 *clamp(1-limb_speed*8, 0, 1) +head.tz +(-1 +cos(-pi/8 +var.swim)*2 )*clamp(limb_speed*8, 0, 1), (-2*limb_speed) +sin(torad(-30)+var.ls)*3*limb_speed -sin(var.r +var.b)/6 -torad(head_yaw)*clamp(1-limb_speed*2, 0, 1) +if(is_riding, -2, 0) ) ) +( 0.75*(1+var.crossbow))*var.pose +(sin(limb_swing/2) +2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)"
				},
				{
					"right_leg.rx": "if(!is_riding&&!is_on_ground&&is_in_water, 0, (torad(1)+sin(var.r +var.b)/60) +asin( sin(var.ls))/3*var.walk +sin(var.ls)/1.3*clamp(-1+limb_speed*3, 0, 1) +clamp(-cos(var.ls)/1.8*clamp(limb_speed*1.5, 0, 1), 0, torad(45)) +torad(15)*clamp(-0.5+limb_speed*2, 0, 1) -torad(head_yaw)/30*clamp(1-limb_speed*2, 0, 1) ) +torad(-5  )*var.pose +( -cos(var.r+var.b +sin(var.r+var.b))/18 )*var.nov2",
					"left_leg.rx": " if(!is_riding&&!is_on_ground&&is_in_water, 0, (torad(1)+sin(var.r +var.b)/60) +asin(-sin(var.ls))/3*var.walk -sin(var.ls)/1.3*clamp(-1+limb_speed*3, 0, 1) +clamp( cos(var.ls)/1.8*clamp(limb_speed*1.5, 0, 1), 0, torad(45)) +torad(15)*clamp(-0.5+limb_speed*2, 0, 1) +torad(head_yaw)/30*clamp(1-limb_speed*2, 0, 1) ) +torad(12.5)*var.pose +( -cos(var.r+var.b +sin(var.r+var.b))/18 )*var.nov2",
					"right_leg.ry": "torad( 0  )*var.pose",
					"left_leg.ry": " torad(-40 )*var.pose",
					"right_leg.rz": "torad(2.5 )*var.pose +if(!is_riding&&!is_on_ground&&is_in_water, 0, -torad(head_yaw)/45*clamp(1-limb_speed*2, 0, 1)  )",
					"left_leg.rz": " torad(-12 )*var.pose +if(!is_riding&&!is_on_ground&&is_in_water, 0, -torad(head_yaw)/45*clamp(1-limb_speed*2, 0, 1)  )",
					"right_leg.tx": "-2 +(-0.75)*var.pose",
					"left_leg.tx": "  2 +( 1   )*var.pose",
					"right_leg.ty": "  24 +if(!is_riding&&!is_on_ground&&is_in_water, body.ty -14 -0.8*clamp(limb_speed*8, 0, 1), clamp( cos(var.ls)*2*var.walk +clamp(2-limb_speed*6, -3, 0) +(-sin(torad(-30)+var.ls)*3 +head.ty)*clamp(-1+limb_speed*3, 0, 1), -8, 0.2)    ) +14*var.count_swim -sin(hurt_time*pi/10)*2",
					"left_leg.ty": "   24 +if(!is_riding&&!is_on_ground&&is_in_water, body.ty -14 -0.8*clamp(limb_speed*8, 0, 1), clamp(-cos(var.ls)*2*var.walk +clamp(2-limb_speed*6, -3, 0) +( sin(torad(-30)+var.ls)*3 +head.ty)*clamp(-1+limb_speed*3, 0, 1), -8, 0.2)    ) +14*var.count_swim -sin(hurt_time*pi/10)*2",
					"right_leg.tz": "-0.2 +if(!is_riding&&!is_on_ground&&is_in_water, todeg(body.rx)/6 -sin(pi/4+var.swim)/1.5 -cos(pi/4+var.swim)/2*0, asin( sin(var.ls))*4*var.walk                                                     +sin(var.ls)*9 *clamp(-1+limb_speed*3, 0, 1) +limb_speed*4) +(-3.25 )*var.pose",
					"left_leg.tz": " -0.2 +if(!is_riding&&!is_on_ground&&is_in_water, todeg(body.rx)/6 +sin(pi/4+var.swim)/1.5 +cos(pi/4+var.swim)/2*0, asin(-sin(var.ls))*4*var.walk                                                     -sin(var.ls)*9 *clamp(-1+limb_speed*3, 0, 1) +limb_speed*4) +( 2.25 )*var.pose",
					"right_leg2.rx": "if(is_riding, -torad(80), !is_riding&&!is_on_ground&&is_in_water,  cos(pi/4+var.swim-sin(var.swim)/2*clamp(limb_speed*8, 0, 1))/3 +torad(20*clamp(limb_speed*8, 0, 1)), 0) +(-sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_leg2.rx": " if(is_riding, -torad(80), !is_riding&&!is_on_ground&&is_in_water, -cos(pi/4+var.swim+sin(var.swim)/2*clamp(limb_speed*8, 0, 1))/3 +torad(20*clamp(limb_speed*8, 0, 1)), 0) +( sin(limb_swing/2)/4 -torad(20) )*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"right_leg2.ry": "if(is_riding,  torad(20), !is_riding&&!is_on_ground&&is_in_water, body.ry, 0)",
					"left_leg2.ry": " if(is_riding, -torad(20), !is_riding&&!is_on_ground&&is_in_water, body.ry, 0)",
					"right_leg2.rz": "if(is_riding,  0        , !is_riding&&!is_on_ground&&is_in_water, torad( 3), 0) -(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"left_leg2.rz": " if(is_riding,  0        , !is_riding&&!is_on_ground&&is_in_water, torad(-3), 0) +(sin(limb_swing/2)/2 -pi/2)/6*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)"
				},
				{
					"r_eye_top.ty": "clamp(head_pitch/60, -0.8, 0.5) +clamp(2*var.nov1, 0, 0.3) +0.3*var.nov3 +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"l_eye_top.ty": "clamp(head_pitch/60, -0.8, 0.5) +clamp(2*var.nov1, 0, 0.3) +0.3*var.nov3 +(-1.5 -cos(limb_swing/3)/2)/4*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"ctrl_r_pupil.tx": " 0.5 -head_yaw/(80 +160*var.ylook) +(-sin(pi/4+var.r+age/10)*3 -0.3 )*clamp(var.nov1*4, 0, 1)",
					"ctrl_l_pupil.tx": "-0.5 -head_yaw/(80 +160*var.ylook) +(-sin(pi/4+var.r+age/10)*3 +0.3 )*clamp(var.nov1*4, 0, 1)",
					"ctrl_r_pupil.ty": " 0.5 +clamp(head_pitch/80, -0.5, 0.5) +( -cos(var.r+var.b +sin(var.r+var.b) )/4 )*var.nov2 +clamp(2*var.nov1, 0, 0.3) +0.3*var.nov3 +(-1 -cos(limb_swing/3)/2)*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"ctrl_l_pupil.ty": "ctrl_r_pupil.ty",
					"right_blink.sy": "clamp(1.5 -abs(sin(var.r+age/8)*6), 0, 1)*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1)",
					"left_blink.sy": " clamp(1.5 -abs(sin(var.r+age/8)*6), 0, 1)*clamp(-32 +cos((var.r+age/8)/1.5)*40 +cos((var.r+age/8)/4)*40, 0, 1)*clamp(1-var.nov3*2, 0, 1) +clamp(-4+var.nov3*6, 0, 1)",
					"right_brow.tx": "-2 +( cos(-pi/3 +var.r+var.b )/6 +0.05 )*var.nov2 +0.1*var.nov3",
					"left_brow.tx": "-right_brow.tx",
					"right_brow.ty": "-24-4.5 +clamp(-sin(var.r+age /110)*4, -0.3, 0) +clamp(head_pitch/60, -0.8, 0.5)*1.2 +clamp(-torad(head_yaw)/2, -0.5, 0.2)*clamp(-sin(var.r+age/90)*6, 0, 1)*(0.6+0.4*var.ylook*random(id)) +(-1 +sin(-var.r)/3)/4*clamp(-4 +sin(var.r +age/97)*8, 0, 1)*random(id) -sin(hurt_time*pi/10)*(1.5 +sin(limb_swing/3)) +if(limb_speed>0.5, sin(pi/4+var.ls*2)/8*limb_speed*(1+random(sin(id))), 0) +( cos(-pi/3 +var.r+var.b )/1.5 -0.1 )*var.nov2 -0.2*var.nov1 -0.2*var.nov3",
					"left_brow.ty": " -24-4.5 +clamp(-sin(var.r+age /110)*4, -0.3, 0) +clamp(head_pitch/60, -0.8, 0.5)*1.2 +clamp( torad(head_yaw)/2, -0.5, 0.2)*clamp(-sin(var.r+age/90)*6, 0, 1)*(0.6+0.4*var.ylook*random(id)) +(-1 +cos(-var.r)/3)/4*clamp(-4 +sin(var.r +age/97)*8, 0, 1)*random(id) -sin(hurt_time*pi/10)*(1.5 -sin(limb_swing/3)) +if(limb_speed>0.5, sin(     var.ls*2)/8*limb_speed*(1+random(cos(id))), 0) +( cos(-pi/3 +var.r+var.b )/1.5 -0.1 )*var.nov2 -0.2*var.nov1 +0.4*var.nov3",
					"right_brow.rz": "      clamp( sin(var.r+age /110), 0, torad( 5)) +torad(5)*clamp(-4 +sin(var.r +age/97)*8, 0, 1)*random(id) +( cos(-pi/3 +var.r+var.b )/10 +torad(2) )*var.nov2 +torad(5)*var.nov3",
					"left_brow.rz": "       clamp(-sin(var.r+age /110), torad(-5), 0) -torad(5)*clamp(-4 +sin(var.r +age/97)*8, 0, 1)*random(id) -( cos(-pi/3 +var.r+var.b )/10 +torad(2) )*var.nov2 -torad(5)*var.nov3",
					"nose2.rx": "      cos(var.ls*2)/8*limb_speed +clamp(-torad(head_pitch)/3 +( -cos(pi/3 +var.r+var.b +sin(var.r+var.b) )/6 )*var.nov2, -pi/4, pi/40) +(-cos(limb_swing/2)/4 -torad(20))*2*if(is_hurt, -sin(hurt_time*pi/5)/6*hurt_time, 0)",
					"nose2.rz": "clamp(cos(var.ls  )/6*limb_speed -torad(head_yaw)/6*clamp(2-limb_speed*4, -1.5, 0) +if(!is_riding&&age>10, -(head.ry-var.y)*1.5 -(rot_y-var.z)*2, 0), -pi/4, pi/4) -head.rz/2"
				},
				{
					"right_eye.sz": "if(between(player_pos_x-pos_x, -30, 30)&&between(player_pos_y-pos_y, -30, 30)&&between(player_pos_z-pos_z, -30, 30), 1, 2)",
					"left_eye.sz": "right_eye.sz",
					"right_eye_white.sx": "2",
					"right_eye_white.sy": "clamp(1 -(r_eye_top.ty), 0.5, 3)",
					"r_eye_pupil.tx": "clamp(ctrl_r_pupil.tx, -0.5, 0.5)",
					"r_eye_pupil.ty": "clamp(ctrl_r_pupil.ty, r_eye_top.ty, 1)",
					"r_eye_pupil_up.sy": "clamp(1 -(ctrl_r_pupil.ty-0.5)              , 0.5, clamp(1-r_eye_top.ty, 0.5, 1))",
					"r_eye_pupil_do.sy": "clamp(1 +(ctrl_r_pupil.ty-0.5) -r_eye_top.ty, 0.5, 1)",
					"r_eye_pupil_in.sx": "clamp(1 -(ctrl_r_pupil.tx-0.5)              , 0.75, 1)",
					"r_eye_pupil_ou.sx": "clamp(1 +(ctrl_r_pupil.tx+0.5)              , 1, 1)",
					"right_eyelid.sy": "clamp(right_eye_white.sy, 1, 4)",
					"right_eyelid.sz": "if(right_eyelid.sy==0||right_blink.sy==0, 0, 1)",
					"right_eyelid.tz": "0",
					"left_eye_white.sx": "2",
					"left_eye_white.sy": "clamp(1 -(l_eye_top.ty), 0.5, 3)",
					"l_eye_pupil.tx": "clamp(ctrl_l_pupil.tx, -0.5, 0.5)",
					"l_eye_pupil.ty": "clamp(ctrl_l_pupil.ty, l_eye_top.ty, 1)",
					"l_eye_pupil_up.sy": "clamp(1 -(ctrl_l_pupil.ty-0.5)              , 0.5, clamp(1-l_eye_top.ty, 0.5, 1))",
					"l_eye_pupil_do.sy": "clamp(1 +(ctrl_l_pupil.ty-0.5) -l_eye_top.ty, 0.5, 1)",
					"l_eye_pupil_in.sx": "clamp(1 -(ctrl_l_pupil.tx-0.5)              , 1, 1)",
					"l_eye_pupil_ou.sx": "clamp(1 +(ctrl_l_pupil.tx+0.5)              , 0.75, 1)",
					"left_eyelid.sy": "clamp(left_eye_white.sy, 1, 4)",
					"left_eyelid.sz": "if(left_eyelid.sy==0||left_blink.sy==0, 0, 1)",
					"left_eyelid.tz": "0"
				},
				{
					"var.y": "var.y2",
					"var.y2": "var.y3",
					"var.y3": "head.ry",
					"var.z": "var.z2",
					"var.z2": "var.z3",
					"var.z3": "rot_y"
				}
			]
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 10, 8], "textureOffset": [0, 0]}
			],
			"submodels": [
				{
					"id": "nose2",
					"invertAxis": "xy",
					"translate": [0, 26.5, -4],
					"boxes": [
						{"coordinates": [-1, -3.5, -2, 2, 4, 2], "textureOffset": [24, 0]}
					]
				},
				{
					"id": "headwear",
					"invertAxis": "xy",
					"translate": [0, 0, 0],
					"boxes": [
						{
							"coordinates": [-4.5, 23.5, -4.5, 9, 11, 9],
							"uvNorth": [40, 8, 48, 18],
							"uvEast": [32, 8, 40, 18],
							"uvSouth": [56, 8, 64, 18],
							"uvWest": [48, 8, 56, 18],
							"uvUp": [48, 8, 40, 0],
							"uvDown": [56, 0, 48, 8]
						}
					]
				},
				{
					"id": "right_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [2, 28, -4],
					"submodels": [
						{
							"id": "r_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "r_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-0.5, -0.5, 0],
							"submodels": [
								{
									"id": "r_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "r_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "r_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "r_eye_pupil_up",
															"invertAxis": "xy",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [28, 21, 29, 22],
																	"uvEast": [28, 21, 28, 22],
																	"uvSouth": [28, 21, 29, 22],
																	"uvWest": [29, 21, 29, 22],
																	"uvUp": [29, 21, 28, 21],
																	"uvDown": [29, 21, 28, 21],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "right_eye_white",
							"invertAxis": "xy",
							"translate": [1, -1, 0],
							"boxes": [
								{
									"coordinates": [-1, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [29, 21, 30, 22],
									"uvEast": [29, 21, 29, 22],
									"uvSouth": [30, 21, 31, 22],
									"uvWest": [30, 21, 30, 22],
									"uvUp": [30, 21, 29, 21],
									"uvDown": [30, 21, 29, 21]
								}
							]
						},
						{
							"id": "right_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "right_blink",
									"invertAxis": "xy",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [28, 22, 30, 23],
											"uvEast": [28, 22, 28, 23],
											"uvSouth": [28, 22, 30, 23],
											"uvWest": [30, 22, 30, 23],
											"uvUp": [30, 22, 28, 22],
											"uvDown": [30, 22, 28, 22],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_r_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "left_eye",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-2, 28, -4],
					"submodels": [
						{
							"id": "l_eye_top",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0.025]
						},
						{
							"id": "l_eye_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0.5, -0.5, 0],
							"submodels": [
								{
									"id": "l_eye_pupil_in",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.5, 0, 0],
									"submodels": [
										{
											"id": "l_eye_pupil_ou",
											"invertAxis": "xy",
											"mirrorTexture": "u",
											"translate": [1, 0, 0],
											"submodels": [
												{
													"id": "l_eye_pupil_do",
													"invertAxis": "xy",
													"mirrorTexture": "u",
													"translate": [-0.5, -0.5, 0],
													"submodels": [
														{
															"id": "l_eye_pupil_up",
															"invertAxis": "xy",
															"translate": [0, 1, 0],
															"boxes": [
																{
																	"coordinates": [-0.5, -1, -0.07, 1, 1, 0.3],
																	"uvNorth": [25, 21, 26, 22],
																	"uvEast": [25, 21, 25, 22],
																	"uvSouth": [25, 21, 26, 22],
																	"uvWest": [26, 21, 26, 22],
																	"uvUp": [26, 21, 25, 21],
																	"uvDown": [26, 21, 25, 21],
																	"sizeAdd": 0.005
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"id": "left_eye_white",
							"invertAxis": "xy",
							"translate": [-1, -1, 0],
							"boxes": [
								{
									"coordinates": [0, 0, -0.03, 1, 1, 0.25],
									"uvNorth": [24, 21, 25, 22],
									"uvEast": [24, 21, 24, 22],
									"uvSouth": [24, 21, 25, 22],
									"uvWest": [24, 21, 24, 22],
									"uvUp": [25, 21, 24, 21],
									"uvDown": [25, 21, 24, 21]
								}
							]
						},
						{
							"id": "left_eyelid",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -1, 1],
							"submodels": [
								{
									"id": "left_blink",
									"invertAxis": "xy",
									"translate": [0, 1, 0],
									"boxes": [
										{
											"coordinates": [-1, -1, -0.08, 2, 1, 0.3],
											"uvNorth": [24, 22, 26, 23],
											"uvEast": [24, 22, 24, 23],
											"uvSouth": [24, 22, 26, 23],
											"uvWest": [26, 22, 26, 23],
											"uvUp": [26, 22, 24, 22],
											"uvDown": [26, 22, 24, 22],
											"sizeAdd": 0.015
										}
									]
								}
							]
						},
						{
							"id": "ctrl_l_pupil",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, 0, 0]
						}
					]
				},
				{
					"id": "left_brow",
					"invertAxis": "xy",
					"translate": [-2, 28.5, -4],
					"boxes": [
						{
							"coordinates": [-1.98, -0.5, -0.25, 3, 1, 0.25],
							"uvNorth": [29, 20, 32, 21],
							"uvEast": [30, 19, 30, 20],
							"uvSouth": [29, 20, 32, 21],
							"uvWest": [31, 19, 31, 20],
							"uvUp": [32, 20, 29, 20],
							"uvDown": [32, 20, 29, 20]
						},
						{
							"coordinates": [-1.98, 0.5, -0.25, 2, 1, 0.25],
							"uvNorth": [30, 19, 32, 20],
							"uvEast": [31, 18, 31, 19],
							"uvSouth": [29, 19, 31, 20],
							"uvWest": [31, 18, 31, 19],
							"uvUp": [32, 19, 30, 19],
							"uvDown": [31, 19, 29, 19]
						}
					]
				},
				{
					"id": "right_brow",
					"invertAxis": "xy",
					"translate": [2, 28.5, -4],
					"boxes": [
						{
							"coordinates": [-1.02, -0.5, -0.25, 3, 1, 0.25],
							"uvNorth": [22, 20, 25, 21],
							"uvEast": [23, 20, 23, 21],
							"uvSouth": [22, 20, 25, 21],
							"uvWest": [24, 20, 24, 21],
							"uvUp": [25, 20, 22, 20],
							"uvDown": [25, 20, 22, 20]
						},
						{
							"coordinates": [-0.02, 0.5, -0.25, 2, 1, 0.25],
							"uvNorth": [22, 19, 24, 20],
							"uvEast": [23, 19, 23, 20],
							"uvSouth": [22, 19, 24, 20],
							"uvWest": [23, 19, 23, 20],
							"uvUp": [24, 19, 22, 19],
							"uvDown": [24, 19, 22, 19]
						}
					]
				}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 12, -3, 8, 12, 6], "textureOffset": [0, 18]}
			],
			"submodels": [
				{
					"id": "bodywear",
					"invertAxis": "xy",
					"translate": [0, 0, 0],
					"boxes": [
						{"coordinates": [-4, 5, -3, 8, 19, 6], "textureOffset": [0, 36], "sizeAdd": 0.25}
					]
				},
				{
					"id": "pouches",
					"invertAxis": "xy",
					"translate": [0, 12.5, 0],
					"boxes": [
						{"coordinates": [-5, -3.5, -2.5, 1, 7, 5], "textureOffset": [44, 36]},
						{"coordinates": [4, -3.5, -2.5, 1, 7, 5], "textureOffset": [44, 36]}
					],
					"submodels": [
						{
							"id": "torsopouch",
							"invertAxis": "xy",
							"translate": [0, 7, -3.75],
							"rotate": [0, 0, -17.5],
							"boxes": [
								{"coordinates": [-3.5, -2.5, -0.5, 7, 5, 1], "textureOffset": [60, 30]}
							]
						}
					]
				},
				{
					"id": "quiver",
					"invertAxis": "xy",
					"translate": [-0.0262, 18.11826, 4.75147],
					"rotate": [-79.09395, -89.03934, 136.86114],
					"boxes": [
						{"coordinates": [-1.4738, -2.11826, -5.50147, 2, 4, 11], "textureOffset": [102, 0]}
					],
					"submodels": [
						{
							"id": "arrow",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-0.47112, 0.46283, -7.25317],
							"rotate": [6.28803, 0.30018, -14.95956],
							"boxes": [
								{"coordinates": [0, -2.5, -3.5, 0, 5, 7], "textureOffset": [114, 10]}
							],
							"submodels": [
								{
									"id": "cross",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [-0.11327, -0.18219, 4.51064],
									"rotate": [0, 0, 90],
									"boxes": [
										{"coordinates": [0.11327, -2.56781, -8.01064, 0, 5, 7], "textureOffset": [114, 10]}
									]
								}
							]
						},
						{
							"id": "arrow2",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [-0.58707, -0.50045, -3.74083],
							"rotate": [-3.69514, -0.21553, 7.53461],
							"boxes": [
								{"coordinates": [0.11327, -2.61781, -7.01064, 0, 5, 7], "textureOffset": [114, 10]}
							],
							"submodels": [
								{
									"id": "cross2",
									"invertAxis": "xy",
									"mirrorTexture": "u",
									"translate": [0, -0.3, 1],
									"rotate": [0, 0, 90],
									"boxes": [
										{"coordinates": [0.11327, -2.56781, -8.01064, 0, 5, 7], "textureOffset": [114, 10]}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{"coordinates": [4, 12, -2, 4, 12, 4], "textureOffset": [28, 20]}
			],
			"submodels": [
				{
					"id": "right_sleeve",
					"invertAxis": "xy",
					"translate": [0, 0, 0],
					"boxes": [
						{
							"coordinates": [3.5, 11.5, -2.5, 5, 13, 5],
							"uvNorth": [32, 40, 36, 52],
							"uvEast": [28, 40, 32, 52],
							"uvSouth": [40, 40, 44, 52],
							"uvWest": [36, 40, 40, 52],
							"uvUp": [36, 40, 32, 36],
							"uvDown": [40, 36, 36, 40]
						}
					]
				}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [5, -22, 0],
			"submodels": [
				{
					"id": "left_arm_sub_0",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [0, 0, 0],
					"boxes": [
						{"coordinates": [-8, 12, -2, 4, 12, 4], "textureOffset": [28, 20]}
					],
					"submodels": [
						{
							"id": "left_sleeve",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [0, -0.25, 0],
							"boxes": [
								{
									"coordinates": [-8.5, 11.75, -2.5, 5, 13, 5],
									"uvNorth": [32, 40, 36, 52],
									"uvEast": [28, 40, 32, 52],
									"uvSouth": [40, 40, 44, 52],
									"uvWest": [36, 40, 40, 52],
									"uvUp": [36, 40, 32, 36],
									"uvDown": [40, 36, 36, 40]
								}
							]
						}
					]
				}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, 0, 0],
			"submodels": [
				{
					"id": "right_leg2",
					"invertAxis": "xy",
					"translate": [2, 12, 0],
					"boxes": [
						{"coordinates": [-2, -12, -2, 4, 12, 4], "textureOffset": [44, 20]}
					]
				}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"mirrorTexture": "u",
			"translate": [2, 0, 0],
			"submodels": [
				{
					"id": "left_leg2",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [-2, 12, 0],
					"submodels": [
						{
							"id": "left_leg_sub_1",
							"invertAxis": "xy",
							"mirrorTexture": "u",
							"translate": [2, -12, 0],
							"boxes": [
								{"coordinates": [-4, 0, -2, 4, 12, 4], "textureOffset": [44, 20]}
							]
						}
					]
				}
			]
		},
		{
			"part": "hat",
			"id": "hat",
			"invertAxis": "xy",
			"translate": [0, -11, 0]
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [0, 0, 0],
			"attach": true
		}
	]
}